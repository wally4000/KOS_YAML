name: CI

on:
  workflow_dispatch
  
env: 
  GIT_BASE: /opt/toolchains/dc/kos
  KOS_PATH: /opt/toolchains/dc

  # push:
  # pull_request:
  # repository_dispatch:
  #   types: [run_build]

jobs:
  build:
    runs-on: ${{ matrix.os[0] }}
    strategy:
      matrix:
        os:
          - [ubuntu-latest, bash]
          - [macos-latest, bash]
      fail-fast: false
    defaults:
     run:
      shell: ${{ matrix.os[1] }} {0}

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies on Ubuntu
      if: startsWith( matrix.os[0], 'ubuntu' )
      run: |
        sudo apt-get update
        sudo apt-get -y installgawk patch bzip2 tar make libgmp-dev libmpfr-dev libmpc-dev gettext wget libelf-dev texinfo bison flex sed git build-essential diffutils curl libjpeg-dev libpng-dev python3 pkg-config libisofs-dev meson ninja-build
        echo "MSYSTEM=x64" >> $GITHUB_ENV
        
    - name: Install dependencies on MacOS
      if: startsWith( matrix.os[0], 'macos' )
      run: |
        brew update
        brew install wget gettext texinfo gmp mpfr libmpc libelf jpeg-turbo libpng meson libisofs        gsed -i '/Requires.private: iconv/d' $(brew --prefix libarchive)/lib/pkgconfig/libarchive.pc || true
        echo "MSYSTEM=x64" >> $GITHUB_ENV
        
    - name: Set ENV
      run: |

        sudo mkdir -p ${KOS_PATH}
        
        sudo chmod -R 755 /opt/toolchains/dc
        sudo chown -R $(id -u):$(id -g) /opt/toolchains/dc
      
        git clone https://github.com/kallistiOS/KallistiOS --depth=1 ${GIT_BASE}
    - name: Build DC Toolchain
      run: | 
        cd ${GIT_BASE}/utils/dc-chain
        mv ${GIT_BASE}/utils/dc-chain/config/config.mk.stable.sample ${GIT_BASE}/utils/dc-chain/config.mk
        make -j$(getconf _NPROCESSORS_ONLN)
        make -j$(getconf _NPROCESSORS_ONLN) gdb
        make clean
    - name: Build KOS
      run: |
        cd ${GIT_BASE}
        mv ${GIT_BASE}/doc/environ.sh.sample ${GIT_BASE}/environ.sh
        source ${GIT_BASE}/environ.sh
        make -j$(getconf _NPROCESSORS_ONLN) 
    - name: Prepare kos folder
      run: |
        tar -zcvf kos-${{matrix.os[0]}}.tar.gz ${KOS_PATH}

    - uses: actions/upload-artifact@v3
      with:
        name: kos-${{matrix.os[0]}}
        path: kos-${{matrix.os[0]}}.tar.gz

    - name: Create pre-release
      if: ${{ github.ref == 'refs/heads/master' }}
      uses: softprops/action-gh-release@v1
      with:
        files: kos-${{matrix.os[0]}}.tar.gz
        prerelease: true
        name: "Development build"
        tag_name: "latest"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
